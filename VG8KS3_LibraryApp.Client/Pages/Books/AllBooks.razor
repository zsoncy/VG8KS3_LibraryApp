@page "/books"
@using VG8KS3_LibraryApp.Shared.Models
@inject HttpClient Http

<PageTitle>Books</PageTitle>


<style>
    .btn-primary:hover,
    .btn-primary:focus {
        background-color: #6f42c1 !important;
        border-color: #6f42c1 !important;
        color: white !important;
    }
</style>

<div class="container-fluid">
    <div class="row vh-100">
        
        <div class="col-10 bg-light p-4">
            <h3>All books in the database.</h3>
            @if (books == null)
            {
                <p>The database is empty...</p>
            }
            else
            {
                <table class="table table-bordered table-striped" style="width: 100%;">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th>Author</th>
                        <th>Publisher</th>
                        <th>Release Year</th>
                        <th>Update</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var b in books)
                    {
                        <tr>
                            <td>@b.BookId</td>
                            <td>@b.Title</td>
                            <td>@b.Author</td>
                            <td>@b.Publisher</td>
                            <td>@b.ReleaseDate</td>
                            <td class="text-center">
                                <a href="/books/update" class="btn btn-primary btn-outline-light align-content-center">
                                    <span class="bi bi-pencil-square" aria-hidden="true"></span>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
        </div>

        <div class="col-2 d-flex flex-column justify-content-center align-items-center text-white">
            <EditForm Model="@bookToAdd" OnValidSubmit="@HandleAddBook" class=" d-flex flex-column justify-content-center align-items-center">
                <InputText @bind-Value="bookToAdd.Title" placeholder="Title" class="form-control mb-2" />
                <InputText @bind-Value="bookToAdd.Author" placeholder="Author" class="form-control mb-2" />
                <InputText @bind-Value="bookToAdd.Publisher" placeholder="Publisher" class="form-control mb-2" />
                <InputNumber @bind-Value="bookToAdd.ReleaseDate" placeholder="Release Date" class="form-control mb-2" />
                <button type="submit" class="btn btn-primary btn-outline-light mb-3 w-75">
                    <span class="bi bi-plus-square" aria-hidden="true"></span> Add
                </button>
            </EditForm>
            <a href="/books/search" class="btn btn-primary btn-outline-light w-75">
                <span class="bi bi-search" aria-hidden="true"></span> Search
            </a>
        </div>

    </div>
</div>






@code {
    private List<BookDto>? books;

    private async Task LoadBooksAsync()
    {
        books = await Http.GetFromJsonAsync<List<BookDto>>("api/Book");
    }
    
    protected override async Task OnInitializedAsync()
    {
        await LoadBooksAsync();
    }
    
    private BookDto bookToAdd = new BookDto();
    private async Task HandleAddBook()
    {
        var response = await Http.PostAsJsonAsync($"api/Book", bookToAdd);
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Book added successfully.");
            bookToAdd = new BookDto();
            await LoadBooksAsync();
        }
        else
        {
            Console.WriteLine("Failed to add the book.");
        }

    }



}